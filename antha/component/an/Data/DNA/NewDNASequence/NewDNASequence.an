protocol NewDNASequence

import (
	"fmt"
	//"math"
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/sequences"
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/text"
)
// Input parameters for this protocol
Parameters (
	DNA_seq string
	Gene_name string
	Plasmid bool
	Linear bool
	SingleStranded bool
	
)

// Data which is returned from this protocol
Data (
	DNA wtype.DNASequence
	DNAwithORFs wtype.DNASequence
	Status string
)

// Physical inputs to this protocol
Inputs (

)

// Physical outputs from this protocol
Outputs (
)

Requirements {

}

// Actions to perform before protocol itself
Setup {

}

// Core process of the protocol: steps to be performed for each input
Steps {
	fmt.Println("In steps!")
	if Plasmid != Linear {
		if Plasmid  {
			DNA = wtype.MakePlasmidDNASequence(Gene_name,DNA_seq)
					}else if Linear {
						DNA = wtype.MakeLinearDNASequence(Gene_name,DNA_seq)
							} else if SingleStranded {
									DNA = wtype.MakeSingleStrandedDNASequence(Gene_name,DNA_seq)	
									} 
									
	orfs := sequences.FindallORFs(DNA.Seq)
	features := sequences.ORFs2Features(orfs)
	
	DNAwithORFs = wtype.Annotate(DNA,features)
	
	Status = fmt.Sprintln(
		text.Print("DNA_Seq: ",DNA_seq),
		text.Print("ORFs: ", DNAwithORFs.Features),
	)
	
}else {Status = fmt.Sprintln("correct conditions not met")}

}
// Actions to perform after steps block to analyze data
Analysis {

}

Validation {

}
